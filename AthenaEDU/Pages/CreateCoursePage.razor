@page "/createCoursePage";

@inject CourseService courseService
@inject ISnackbar snackBar

<PageTitle>Создание курса</PageTitle>

<MudGrid Justify="Justify.Center" Style="height: 80vh; width: 100vw;" Class="mt-10">
    <MudPaper Elevation="10" Style="width: 60%">
        <MudGrid Justify="Justify.Center" Class="mt-5" Style="display: flex; align-items: center;">
            <MudItem xs="6" md="5">
                <MudTextField T="string" @bind-Value="_course.Name" For="@(() => _course.Name)" Variant="Variant.Outlined" Label="Название курса"></MudTextField>
            </MudItem>
            <MudItem xs="3" md="3">
                <MudButton OnClick="CreateCourse" Class="mud-theme-primary">Создать курс</MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudGrid>

@code {
    private Course _course;
    private string imageData;

    private Dictionary<Module, EditContext> moduleContexts = new Dictionary<Module, EditContext>();
    private Dictionary<Lesson, EditContext> lessonContexts = new Dictionary<Lesson, EditContext>();

    protected override void OnInitialized()
    {
        _course = new Course();
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var format = "image/png,jpg";
        var resizedImage = await file.RequestImageFileAsync(format, 100, 100);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        // Here you would send the imageData to your server and get the image URL
        // For example, you could use HttpClient to send the image to your server
        // and get the image URL to store in your MongoDB document
    }

    private async Task CreateCourse()
    {
        bool success = false;
        try
        {
            if (courseService.GetCourseByName(_course.Name) == null)
            {
                await courseService.AddCourseAsync(_course);
                success = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при создании курса: {ex.Message}");
        }

        if (success)
        {
            snackBar.Add("Курс успешно создан!", Severity.Success);
        }
        else
        {
            snackBar.Add("Курс с таким названием уже существует!", Severity.Error);
        }
    }
}
