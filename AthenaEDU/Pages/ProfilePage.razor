@page "/profilePage"

@inject UserService userService
@inject ISnackbar snackbar
@inject IDialogService DialogService
@inject NavigationManager navigationManager

<EditForm Model="@_currentUser" OnValidSubmit="SaveChanges">
    <DataAnnotationsValidator />
    <MudGrid Style="height: 90vh; width: 100vw;" Class="mt-10">
        <MudItem xs="4" md="4">
            <MudGrid Justify="Justify.Center" Style="align-items: center;">
                <MudItem xs="6" md="6">
                    <MudStack>
                        <MudImage Src="images/defaultProfile.png" Alt="User image" ObjectFit="ObjectFit.Fill" Height="250" Width="250" Elevation="25" Class="rounded-lg" />
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4 ml-2" FullWidth="true">Сменить изображение</MudButton>
                    </MudStack>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="3" md="3">
            <MudGrid>
                <MudItem xs="12" md="10">
                    <MudField Label="Фамилия" Variant="Variant.Outlined" Adornment="Adornment.Start">@_currentUser.Surname</MudField>
                </MudItem>
                <MudItem xs="12" md="10">
                    <MudField Label="Имя" Variant="Variant.Outlined" Adornment="Adornment.Start">@_currentUser.Name</MudField>
                </MudItem>
                <MudItem xs="12" md="10">
                    <MudField Label="Отчество" Variant="Variant.Outlined" Adornment="Adornment.Start">@_currentUser.Patronymic</MudField>
                </MudItem>
                <MudItem xs="12" md="10">
                    <MudField Label="Email" Variant="Variant.Outlined" Adornment="Adornment.Start">@_currentUser.Email</MudField>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="2" md="2">
            <MudStack Justify="Justify.FlexStart">
                    <MudButton OnClick="@ChangePassword" Variant="Variant.Filled" Color="Color.Secondary" Class="mt-4" FullWidth="true">
                        <MudText Color="Color.Primary" Class="fw-bold" Typo="Typo.button">Сменить пароль</MudText>
                    </MudButton>

                     <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4 fw-bold" FullWidth="true">Сохранить</MudButton>

                    <MudButton OnClick="@Logout" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4 fw-bold" FullWidth="true">
                        <MudText Color="Color.Secondary" Class="fw-bold" Typo="Typo.button">Выйти</MudText>
                    </MudButton>
            </MudStack>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private User _currentUser = new User();

    protected override void OnInitialized()
    {
        _currentUser = userService.CurrentUser;
    }

    private async Task SaveChanges()
    {
        bool success = false;
        try
        {
            await userService.UpdateUserAsync(

                _currentUser);
            success = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при попытке сохранить изменения: {ex.Message}");
        }

        if (success)
        {
            snackbar.Add("Изменения успешно сохранены!", Severity.Success);
        }
        else
        {
            snackbar.Add("При попытке сохранить изменения возникла ошибка!", Severity.Error);
        }
    }

    private void UploadFiles2(IBrowserFile file)
    {

        //TODO upload the files to the server
    }

    private void Logout()
    {
        userService.Logout();
        navigationManager.NavigateTo("/", forceLoad: true);
    }

    private void ChangePassword()
    {
        var parameters = new DialogParameters();
        parameters.Add("User", userService.CurrentUser);
        DialogService.Show<ChangePasswordDiag>("Смена пароля", parameters);
    }
}