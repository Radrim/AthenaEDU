@page "/registationPage"
@using System.ComponentModel.DataAnnotations;
@inject NavigationManager navigationManager

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center" Style="align-items: center; height: 80vh; width: 80vw;">
        <MudItem xs="10" sm="3">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="First name" HelperText="Max. 8 characters"
                    @bind-Value="model.Name" For="@(() => model.Name)" />

                    <MudTextField Label="First name" HelperText="Max. 8 characters"
                    @bind-Value="model.Surname" For="@(() => model.Surname)" />

                    <MudTextField Label="Phone number" HelperText="Max. 11 characters"
                    @bind-Value="model.PhoneNumber" For="@(() => model.PhoneNumber)" />

                    <MudTextField Label="Email" Class="mt-3"
                    @bind-Value="model.Email" For="@(() => model.Email)" />

                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                    @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />

                    <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                    @bind-Value="model.RepeatPassword" For="@(() => model.RepeatPassword)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Name { get; set; }

        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Surname { get; set; }

        [Required]
        [StringLength(11, ErrorMessage = "Name length can't be more than 11.")]
        public string PhoneNumber { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string RepeatPassword { get; set; }

    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        navigationManager.NavigateTo("/");
        StateHasChanged();
    }
}